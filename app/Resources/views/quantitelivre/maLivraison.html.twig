{% include 'AdminHeader.html.twig' %}



{% block body %}
    {% block mainPanel %}

        <div class="mainpanel">

            <div class="contentpanel" id="tableToPrint">
                <h1>Quantitelivres list</h1>
                <div class="table-responsive">


                    <table class="table table-bordered table-inverse table-striped nomargin" id="tableLivraison">

                        {% set break = false %}
                        {% for livraison in livraison  if not break %}
                            <tbody>
                            <tr>
                                <th>La Quantite a Livrer</th>
                                <td>{{ livraison.quantite_l }}</td>
                            </tr>
                            <tr>
                                <th>La Quantite commandée</th>
                                <td>{{ livraison.quantite_c }}</td>
                            </tr>

                            <tr>
                                <th>Le Produit reférence</th>
                                <td>{{ livraison.id }}</td>
                            </tr>

                            <tr>
                                <th>La Bon de commande</th>
                                <td>{{ livraison.bonCommande }}</td>
                            </tr>
                            <tr>
                                <th>La bon de livraison</th>
                                <td>{{ livraison.num_bl }}</td>
                            </tr>
                            <tr>
                                <th>La date de livraison</th>
                                <td>{{ livraison.date_l|date('Y-m-d H:i:s') }}</td>
                            </tr>
                            <tr>
                                <th>La personne a livré</th>
                                <td>{{ livraison.username }}</td>
                            </tr>
                            </tbody>
                    </table>
                </div>


                <div class="btn-group">
                    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" >
                        Action <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li><a href="" id="imprimer">Imprimer</a></li>
                        <li><a href="" id="PDF">Telecharger PDF</a></li>

                    </ul>
                </div><!-- btn-group -->
            </div>

            <div id="floating-panel" class="col-md-3">

                <input id="start"  style="visibility: hidden" />


                <select id="end" onchange="calcRoute();" class="form-control">
                    <option default>Selectionner la destination du client</option>
                    <option value="{{ livraison.city }}">{{ livraison.city }}</option>


                    country

                    {% set break = true %}
                    {% endfor %}
                </select>
            </div>



            <div class="row">
                <div class="col-md-6 col-md-offset-1">
                    <div class="panel">
                        <div class="panel-heading">
                            <h4 class="panel-title">Trajectoire du Livraison</h4>

                        </div>
                        <div class="panel-body">
                            <div id="mapBasic" class="map-wrapper"></div>
                        </div>
                    </div>
                </div>
            </div>



        </div><!-- mainpanel -->

        {% include 'AdminFooter.html.twig' %}

    {% endblock %}





    <script src="{{ asset('assets/js/jquery-1.11.1.min.js') }}"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.2/jspdf.debug.js"></script>
    <script>
        function initMap() {

            var lat ;
            var long ;
            var geocoder;

            var directionsService = new google.maps.DirectionsService;
            var directionsDisplay = new google.maps.DirectionsRenderer;
            var map = new google.maps.Map(document.getElementById('mapBasic'), {
                zoom: 6,
                center: {lat: -34.397, lng: 150.644}
            });

            var infoWindow = new google.maps.InfoWindow({map: map});
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    var pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    infoWindow.setPosition(pos);
                    infoWindow.setContent('Location found.');
                    map.setCenter(pos);

                    codeLatLng(pos.lat,pos.lng);


                    var onChangeHandler = function() {
                        calculateAndDisplayRoute(directionsService, directionsDisplay);
                    };
                    document.getElementById('start').addEventListener('change', onChangeHandler);
                    document.getElementById('end').addEventListener('change', onChangeHandler);



                }, function() {
                    handleLocationError(true, infoWindow, map.getCenter());
                });
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }


            directionsDisplay.setMap(map);



        }

        function calculateAndDisplayRoute(directionsService, directionsDisplay) {
            directionsService.route({
                origin: document.getElementById('start').value,
                destination: document.getElementById('end').value,
                travelMode: google.maps.TravelMode.DRIVING
            }, function(response, status) {
                if (status === google.maps.DirectionsStatus.OK) {
                    directionsDisplay.setDirections(response);
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
            });
        }


        function codeLatLng(lat, lng) {

            var latlng = new google.maps.LatLng(lat, lng);
            geocoder = new google.maps.Geocoder();

            geocoder.geocode({'latLng': latlng}, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    console.log(results)
                    if (results[1]) {
                        //formatted address
                        //alert(results[0].formatted_address)

                        //find country name
                        for (var i=0; i<results[0].address_components.length; i++) {
                            for (var b=0;b<results[0].address_components[i].types.length;b++) {

                                //there are different types that might hold a city admin_area_lvl_1 usually does in come cases looking for sublocality type will be more appropriate
                                if (results[0].address_components[i].types[b] == "administrative_area_level_1") {
                                    //this is the object you are looking for
                                    city= results[0].address_components[i];
                                    break;
                                }
                            }
                        }
                        //city data
                        alert(city.short_name + " " + city.long_name);
                        document.getElementById('start').value = city.long_name;



                    } else {
                        alert("No results found");
                    }
                } else {
                    alert("Geocoder failed due to: " + status);
                }
            });



        }





    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDbwb_BE_sz270yhnSsg7i-vuPif_6JBMI&signed_in=true&callback=initMap"
            async defer></script>


    <script type="text/javascript">
        function printElem(divId) {
            var content = document.getElementById('tableToPrint').innerHTML;
            var mywindow = window.open('', 'Print', 'height=600,width=800');

            mywindow.document.write("<html><head><title>Print</title>");
            mywindow.document.write("</head><body>");
            mywindow.document.write(content);
            mywindow.document.close();
            mywindow.focus();
            mywindow.print();
            mywindow.close();
            return true;
        }

        $('#imprimer').on('click',function(){
            printElem('tableToPrint');
        });

        var doc = new jsPDF();
        var specialElementHandlers = {
            '#PDF': function (element, renderer) {
                return true;
            }
        };

        $('#PDF').click(function () {
            doc.fromHTML($('#tableToPrint').html(), 20, 20, {
                'width': 200,
                'elementHandlers': specialElementHandlers
            });
            doc.save('Livraison.pdf');
        });
    </script>


    <script type="text/javascript">
        $( "#livraison" ).toggleClass( "nav-parent active" )
    </script>
{% endblock %}
